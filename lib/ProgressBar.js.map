{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///./src/library.ts","webpack:///./src/ProgressBar/ProgressBar.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","react","__webpack_exports__","mergeProps","mergeStringKeyValues","base","attributes","_i","arguments","length","Error","properties","rest","slice","reduce","acc","curr","result","assign","entries","forEach","_a","k","v","includes","filter","join","ProgressBar","barColor","text","className","title","classNames","values","concat","map","val","Math","max","min","texts","barColors","_library__WEBPACK_IMPORTED_MODULE_1__","bars","barAttributes","style","transform","background","react__WEBPACK_IMPORTED_MODULE_0__","__assign","defaultProps"],"mappings":"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","file":"ProgressBar.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 63);\n","module.exports = react;","export declare namespace RKLibrary {\r\n  interface StylingProps {\r\n    /** the css class attribute */\r\n    className?: string,\r\n    /** the css style attribute */\r\n    style?: object,\r\n    /** the id attribute */\r\n    id?: string\r\n  }\r\n}\r\n\r\nconst mergeStringKeyValues: string[] = [ 'className' ];\r\n\r\nexport const mergeProps = (base, ...attributes: object[]): (object | never) => {\r\n  if (!base || !attributes.length) { throw new Error('must merge at least 2 objects') }\r\n\r\n  const [ properties, ...rest ] = attributes;\r\n  if (rest.length) {\r\n    // @ts-ignore-next-line\r\n    return rest.reduce(\r\n      (acc, curr) => mergeProps(acc, curr),\r\n      mergeProps(base, properties)\r\n    );\r\n  }\r\n\r\n  const result: object = Object.assign({}, base);\r\n  Object.entries(properties)\r\n    .forEach(([ k, v ]) => {\r\n      result[k] = mergeStringKeyValues.includes(k)\r\n        ? [result[k], v].filter(i => !!i).join(' ')\r\n        : v;\r\n    });\r\n  return result;\r\n};\r\n","import * as React from 'react';\nimport { RKLibrary, mergeProps } from '../library';\nimport './ProgressBar.scss';\n\ninterface ProgressBarProps extends RKLibrary.StylingProps {\n  /** color the filled progress bar should be */\n  barColor?: string | string[];\n  /** list of classes to apply to each value bar */\n  classNames?: string[];\n  /** hover title for the bar(s) */\n  title?: string;\n  /** the percentage to display, given as a positive value `[0, 1]`. can be either a single float or an array of floats denoting a list of segments progress */\n  value: number | number[];\n  /** the text to display for a the bar */\n  text?: string | string[];\n}\n\n/**\n * A simple progress bar that moves from left to right when given a value(s) between\n * 0 and 1. Basically, most of the css can be overriden besides the props to set colors.\n * One line of text is expected for the status, which will be center white with black outline.\n */\nconst ProgressBar: React.StatelessComponent<ProgressBarProps> = ({\n  barColor, value, text, className, title, classNames\n}) => {\n  const values: number[] = [].concat(value)\n    .map(val => (-1 + Math.max(0, Math.min(val, 1))));\n  const texts: string[] = [].concat(text);\n  const barColors: string[] = [].concat(barColor);\n  const attributes: object = mergeProps(\n    { className: 'status-progress' },\n    { className, title }\n  );\n\n  const bars = values.map((val, i) => {\n    const barAttributes = mergeProps(\n      {\n        className: 'status-progress-bar-value',\n        style: {\n          transform: `translateX(${val * 100}%)`,\n          background: barColors[i] || barColor\n        }\n      },\n      { className: classNames[i] }\n    );\n    return (\n      <div key={i} className='status-progress-bar'>\n        <div {...barAttributes} />\n        <div className='status-progress-text'>{texts[i]}</div>\n      </div>\n    );\n  });\n  // TODO: maybe allow for proportional sizes of the segments\n  return (\n    <section {...attributes} >\n      { bars }\n    </section>\n  );\n};\nProgressBar.defaultProps = {\n  barColor: 'green',\n  classNames: [],\n  value: 0\n};\n\nexport default ProgressBar;\n"],"sourceRoot":""}