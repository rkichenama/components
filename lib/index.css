canvas.canvas {
  border: 1px solid gray;
  max-width: 100%; }

.card {
  position: relative;
  perspective: 100vw;
  width: 96px;
  height: 96px; }
  .card.flipped .flip {
    transform: rotateY(180deg); }
  .card .flip {
    transition: 0.6s;
    transform-style: preserve-3d;
    position: relative;
    width: 100%;
    height: 100%; }
  .card .front, .card .back {
    border: 1px solid white;
    border-radius: 4px;
    background-color: white;
    padding: 8px;
    backface-visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
    width: inherit;
    right: 0;
    bottom: 0;
    color: black; }
  .card .front {
    z-index: 2;
    transform: rotateY(0deg); }
  .card .back {
    transform: rotateY(180deg); }

@supports not (display: grid) {
  .card {
    margin: 4px; } }

body {
  --cube-square: 96px; }

.cube {
  position: relative;
  perspective: 100vw;
  width: var(--cube-square, 96px);
  height: var(--cube-square, 96px); }
  .cube.front .flip {
    transform: rotateX(0deg) rotateY(0deg); }
  .cube.back .flip {
    transform: rotateX(0deg) rotateY(-180deg); }
  .cube.bottom .flip {
    transform: rotateX(90deg) rotateY(0deg); }
  .cube.top .flip {
    transform: rotateX(-90deg) rotateY(0deg); }
  .cube.left .flip {
    transform: rotateX(0deg) rotateY(90deg); }
  .cube.right .flip {
    transform: rotateX(0deg) rotateY(-90deg); }
  .cube .flip {
    transition: 0.6s;
    transform-style: preserve-3d;
    transition-timing-function: cubic-bezier(0, 1, 0.8, 1);
    position: relative;
    width: 100%;
    height: 100%; }
  .cube .front, .cube .top, .cube .bottom, .cube .left, .cube .right, .cube .back {
    border: 1px solid white;
    border-radius: 4px;
    background-color: white;
    padding: 8px;
    backface-visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
    width: inherit;
    right: 0;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center; }
  .cube .front {
    transform: translateZ(calc(var(--cube-square, 96px) / +2)) rotateY(0deg); }
  .cube .back {
    transform: translateZ(calc(var(--cube-square, 96px) / -2)) rotateY(180deg); }
  .cube .left {
    transform: translateX(calc(var(--cube-square, 96px) / -2)) rotateY(-90deg); }
  .cube .right {
    transform: translateX(calc(var(--cube-square, 96px) / +2)) rotateY(90deg); }
  .cube .top {
    transform: translateY(calc(var(--cube-square, 96px) / -2)) rotateX(90deg); }
  .cube .bottom {
    transform: translateY(calc(var(--cube-square, 96px) / +2)) rotateX(-90deg); }

@supports not (display: grid) {
  .cube {
    margin: 4px; } }

.github-profile {
  display: inline-flex;
  align-items: flex-start;
  height: 57px; }
  .github-profile .img {
    flex: 0 0 auto;
    font-size: 0; }
  .github-profile .text {
    flex: 1 1 auto;
    margin-left: 8px;
    font-size: 20px;
    line-height: 24px; }
  .github-profile:empty {
    width: 192px;
    background-image: radial-gradient(circle 24px, rgba(0, 0, 0, 0.1) 99%, transparent 0), linear-gradient(rgba(0, 0, 0, 0.1) 16px, transparent 0), linear-gradient(rgba(0, 0, 0, 0.1) 16px, transparent 0);
    background-size: 48px 48px, 136px 16px, 136px 16px;
    background-position: 0px 0px, 56px 4px, 56px 28px;
    background-repeat: no-repeat; }

.rk-icon {
  max-width: 100%;
  position: relative;
  fill: currentColor; }

@charset "UTF-8";
.information {
  border: 1px solid; }
  .information,
  .information > header,
  .information > section {
    display: block;
    position: relative;
    padding: 4px; }
  .information > header:after {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 16px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-size: 16px; }
  .information > header.right {
    padding-right: 20px; }
    .information > header.right:after {
      content: '\25D1';
      right: 0; }
  .information > header.left {
    padding-left: 20px; }
    .information > header.left:after {
      content: '\25D0';
      left: 0; }
  .information > section {
    padding: 6px 4px;
    display: none; }
  .information.open > header:after {
    content: '\25D3'; }
  .information.open > section {
    display: block; }

.menu-bar {
  width: 100%;
  max-width: 100%; }
  .menu-bar *:focus {
    outline: 0; }
  .menu-bar .-hidden {
    display: none; }
  .menu-bar .-primary {
    display: flex;
    justify-content: flex-start;
    align-items: stretch; }
  .menu-bar .-secondary {
    position: absolute;
    top: calc(100%);
    left: -1px;
    right: 0;
    z-index: 10; }
    .menu-bar .-secondary > li {
      margin-top: 2px; }
  .menu-bar ul {
    -webkit-margin-before: 0;
    -webkit-margin-after: 0;
    -webkit-margin-start: 0;
    -webkit-margin-end: 0;
    -webkit-padding-start: 0;
    list-style: none; }
    .menu-bar ul > li {
      position: relative;
      display: flex;
      flex-grow: 1;
      justify-content: center;
      align-items: center;
      background-color: rgba(0, 0, 0, 0.2); }
      .menu-bar ul > li + li {
        border-left: 1px solid rgba(36, 36, 36, 0.2); }
      .menu-bar ul > li > a {
        display: block;
        padding: 8px 16px;
        box-shadow: inset 0 -0.2em 0 rgba(36, 36, 36, 0.2);
        flex-basis: 100%;
        text-align: center; }
        .menu-bar ul > li > a:active {
          background-color: rgba(71, 71, 71, 0.2); }
      .menu-bar ul > li:hover, .menu-bar ul > li:focus-within {
        background-color: rgba(36, 36, 36, 0.2);
        cursor: pointer; }

::root {
  --glpyh: 48px; }

.odometer {
  height: var(--glyph, 48px);
  overflow: hidden;
  padding: 0 8px;
  border-radius: 6px;
  box-shadow: 0 0 12px black, inset 0 0 calc(var(--glyph) / 4) black;
  display: flex;
  justify-content: flex-end; }
  .odometer .column {
    overflow: visible;
    font-size: var(--glyph, 48px);
    line-height: 1;
    transform: translateY(0);
    margin-left: 4px; }
    .odometer .column + .column .digit {
      border-left: 1px solid black; }
    .odometer .column .digit {
      text-align: center;
      height: var(--glyph, 48px);
      padding: 0 4px;
      -webkit-text-stroke: 2px black;
      text-stroke: 2px black; }
    .odometer .column.animating {
      transition: transform .5s;
      transition-timing-function: cubic-bezier(1, 0, 0, 1); }

.status-progress {
  position: relative;
  display: flex;
  width: 100%;
  height: 32px;
  padding: 6px;
  background-color: rgba(255, 255, 255, 0.4);
  overflow: hidden; }
  .status-progress-text, .status-progress-bar {
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden; }
  .status-progress-text {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    flex-direction: column;
    color: white;
    text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
    z-index: 2; }
  .status-progress-bar {
    position: relative;
    flex: 1;
    overflow: hidden;
    z-index: 1; }
    .status-progress-bar-value {
      background-color: purple;
      width: 100%;
      height: 100%;
      transform: translateX(-100%); }

@charset "UTF-8";
.rrk-spinner {
  position: relative;
  min-height: 96px;
  --shade-color: rgba(255, 255, 255, 0.4);
  --spinner-color: white;
  --spinner-shaodw: black; }
  .rrk-spinner:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    background-color: var(--shade-color, rgba(255, 255, 255, 0.4));
    bottom: 0;
    right: 0; }
  .rrk-spinner .spinner {
    position: absolute;
    top: 24px;
    left: 50%;
    font-size: 48px;
    line-height: 57.6px;
    height: 1em;
    overflow: hidden;
    color: var(--spinner-color, white);
    text-shadow: 0 1px 0 var(--spinner-shadow, black), 1px 0 0 var(--spinner-shadow, black), 0 -1px 0 var(--spinner-shadow, black), -1px 0 0 var(--spinner-shadow, black), 1px 1px 0 var(--spinner-shadow, black), -1px -1px 0 var(--spinner-shadow, black), 1px -1px 0 var(--spinner-shadow, black), -1px 1px 0 var(--spinner-shadow, black); }
    .rrk-spinner .spinner:after {
      display: inline-table;
      white-space: pre;
      content: "\280B\A\2819\A\2839\A\2838\A\283C\A\2834\A\2826\A\2827\A\2807\A\280F"; }

@keyframes spin1 {
  to {
    transform: translateY(-57.6px); } }

@keyframes spin2 {
  to {
    transform: translateY(-115.2px); } }

@keyframes spin3 {
  to {
    transform: translateY(-172.8px); } }

@keyframes spin4 {
  to {
    transform: translateY(-230.4px); } }

@keyframes spin5 {
  to {
    transform: translateY(-288px); } }

@keyframes spin6 {
  to {
    transform: translateY(-345.6px); } }

@keyframes spin7 {
  to {
    transform: translateY(-403.2px); } }

@keyframes spin8 {
  to {
    transform: translateY(-460.8px); } }

@keyframes spin9 {
  to {
    transform: translateY(-518.4px); } }

@keyframes spin10 {
  to {
    transform: translateY(-576px); } }

.rrk-spinner .spinner:after {
  animation: spin10 1.45s steps(10) infinite; }

@keyframes spin11 {
  to {
    transform: translateY(-633.6px); } }

@keyframes spin12 {
  to {
    transform: translateY(-691.2px); } }

::root {
  --toggle-track-padding: 4px;
  --toggle-animation-duration: 750ms;
  --toggle-switch-color: white;
  --toggle-track-color: rgba(0, 0, 0, 0.2); }

.toggle-container {
  color: blue;
  position: relative;
  padding: var(--toggle-track-padding, 4px) 1em;
  border-radius: 2em;
  background-color: var(--toggle-track-color, rgba(0, 0, 0, 0.2));
  border: 1px solid var(--toggle-switch-color, white);
  overflow: hidden; }

.toggle-track {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  width: 100%;
  border-radius: calc( (1em + (var(--toggle-track-padding, 4px) * 2)) / 2); }
  .toggle-track.off {
    animation-timing-function: ease-out;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
    animation-duration: var(--toggle-animation-duration, 750ms);
    animation-name: slideOff; }
  .toggle-track.on {
    animation-timing-function: ease-out;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
    animation-duration: var(--toggle-animation-duration, 750ms);
    animation-name: slideOn; }

.toggle-switch {
  border-radius: .5em;
  height: 1em;
  width: 1em;
  background-color: var(--toggle-switch-color, white); }

@keyframes slideOn {
  from {
    transform: translateX(-50%); }
  to {
    transform: translateX(50%); } }

@keyframes slideOff {
  from {
    transform: translateX(50%); }
  to {
    transform: translateX(-50%); } }

body {
  --treemap-bg-color: rgba(0, 0, 0, 0.1);
  --treemap-bg-hover: black;
  --treemap-border-color: white; }

.tree-map {
  width: 100%;
  max-width: 100%; }
  .tree-map, .tree-map .tree-node {
    display: flex;
    justify-content: center;
    align-items: stretch;
    flex: 1 1 0;
    flex-basis: 100%;
    position: relative;
    background-color: var(--treemap-bg-color, rgba(0, 0, 0, 0.1));
    position: relative; }
  .tree-map .tree-node {
    box-shadow: inset 0 0 1px var(--treemap-border-color, white);
    padding: 2px;
    overflow: hidden; }
    .tree-map .tree-node.alt {
      flex-direction: column; }
    .tree-map .tree-node:hover:before {
      content: attr(alt);
      position: absolute;
      top: 1px;
      left: 1px;
      right: 1px;
      bottom: 1px;
      text-align: center;
      display: flex;
      align-items: center;
      justify-content: center;
      white-space: nowrap;
      background-color: var(--treemap-bg-hover, black);
      color: var(--treemap-border-color, white); }


/*# sourceMappingURL=index.js.map*/